/* Memory Match Mode Styles - Dark Theme */
.memory-game-container {
    max-width: 1000px;
    margin: 0 auto;
    padding: 1rem;
}

.memory-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 1rem;
    max-width: 800px;
    margin: 0 auto;
    padding: 1rem;
}

.memory-card {
    aspect-ratio: 1;
    background: var(--container-bg);
    border-radius: 12px;
    border: 3px solid var(--border-color);
    cursor: pointer;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    min-height: 150px;
}

.memory-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px var(--shadow-color);
    border-color: var(--primary-color);
}

.memory-card.flipped {
    background: var(--guess-bg);
    border-color: var(--primary-color);
}

.memory-card.matched {
    background: var(--success-color);
    border-color: var(--success-color);
    cursor: default;
    opacity: 0.8;
}

.memory-card.matched:hover {
    transform: none;
}

.card-front,
.card-back {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 0.5rem;
    backface-visibility: hidden;
    transition: transform 0.6s;
}

.card-front {
    background: var(--container-bg);
    transform: rotateY(180deg);
}

.card-back {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    transform: rotateY(0deg);
}

.memory-card.flipped .card-front {
    transform: rotateY(0deg);
}

.memory-card.flipped .card-back {
    transform: rotateY(-180deg);
}

.card-back-content {
    text-align: center;
    color: white;
}

.card-back-icon {
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
    opacity: 0.8;
}

.card-back-text {
    font-size: 0.9rem;
    font-weight: 600;
    opacity: 0.9;
}

.card-image {
    width: 100%;
    height: 60%;
    object-fit: contain;
    margin-bottom: 0.5rem;
    border-radius: 8px;
}

.card-name {
    font-size: 0.8rem;
    font-weight: 600;
    text-align: center;
    color: var(--text-color);
    line-height: 1.2;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.memory-instructions {
    margin-top: 2rem;
}

.instruction-text {
    color: var(--text-secondary);
    font-size: 1.1rem;
    margin: 0;
}

/* Result Modal Styles */
.result-content {
    padding: 1rem;
}

.result-icon {
    animation: bounceIn 0.6s ease-out;
}

.stats-grid {
    background: var(--guess-bg);
    border-radius: 12px;
    padding: 1.5rem;
    margin-top: 1rem;
}

.stat-item {
    text-align: center;
    padding: 0.5rem;
}

.stat-value {
    font-size: 1.8rem;
    font-weight: 700;
    color: var(--primary-color);
    margin-bottom: 0.25rem;
}

.stat-label {
    font-size: 0.9rem;
    color: var(--text-secondary);
    font-weight: 500;
}

/* Responsive Design */
@media (max-width: 768px) {
    .memory-grid {
        grid-template-columns: repeat(4, 1fr);
        gap: 0.5rem;
        padding: 0.5rem;
    }
    
    .memory-card {
        min-height: 100px;
    }
    
    .card-back-icon {
        font-size: 1.8rem;
    }
    
    .card-back-text {
        font-size: 0.7rem;
    }
    
    .card-name {
        font-size: 0.7rem;
    }
    
    .game-header .game-info h2 {
        font-size: 1.3rem;
    }
    
    .score-info .badge {
        font-size: 0.7rem !important;
        margin: 0.1rem;
    }
}

@media (max-width: 480px) {
    .memory-grid {
        grid-template-columns: repeat(4, 1fr);
        gap: 0.3rem;
    }
    
    .memory-card {
        min-height: 80px;
    }
    
    .card-back-icon {
        font-size: 1.5rem;
    }
    
    .card-back-text {
        font-size: 0.6rem;
    }
}

/* Animations */
@keyframes bounceIn {
    0% {
        transform: scale(0.3);
        opacity: 0;
    }
    50% {
        transform: scale(1.05);
    }
    70% {
        transform: scale(0.9);
    }
    100% {
        transform: scale(1);
        opacity: 1;
    }
}

@keyframes cardFlip {
    0% {
        transform: rotateY(0deg);
    }
    100% {
        transform: rotateY(180deg);
    }
}

.memory-card.flipping {
    animation: cardFlip 0.6s ease-in-out;
}

/* Match animation */
@keyframes matchFound {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

.memory-card.match-animation {
    animation: matchFound 0.5s ease-in-out;
}